args=[]
sources=[
    {
        format=PARQUET
        id="normalized_researchstudy"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/researchstudy"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_researchstudy"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_patient"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/patient"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_patient"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_group"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/group"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_group"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_documentreference"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/documentreference"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_documentreference"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_specimen"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/specimen"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_specimen"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_condition_disease"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/condition/disease"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_condition"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_condition_phenotype"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/condition/phenotype"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_condition"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_observation_family-relationship"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/observation/family-relationship"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_observation"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_observation_vital-status"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/observation/vital-status"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_observation"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_researchsubject"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/fhir/researchsubject"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_researchsubject"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="normalized_organization"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "release_id"
        ]
        path="/fhir/organization"
        readoptions {}
        storageid=normalized
        table {
            database=portal-qa-normalized
            name="fhir_organization"
        }
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=JSON
        id="hpo_terms"
        keys=[]
        loadtype=OverWrite
        partitionby=[]
        path="/hpo_terms"
        readoptions {}
        storageid=hpoterms
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=JSON
        id="mondo_terms"
        keys=[]
        loadtype=OverWrite
        partitionby=[]
        path="/mondo_terms"
        readoptions {}
        storageid=mondoterms
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="simple_participant"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/es_index/fhir/simple_participant"
        readoptions {}
        storageid=esindex
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="es_index_study_centric"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/es_index/fhir/study_centric"
        readoptions {}
        storageid=esindex
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="es_index_participant_centric"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/es_index/fhir/participant_centric"
        readoptions {}
        storageid=esindex
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="es_index_file_centric"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/es_index/fhir/file_centric"
        readoptions {}
        storageid=esindex
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    },
    {
        format=PARQUET
        id="es_index_biospecimen_centric"
        keys=[]
        loadtype=OverWrite
        partitionby=[
            "study_id",
            "release_id"
        ]
        path="/es_index/fhir/biospecimen_centric"
        readoptions {}
        storageid=esindex
        writeoptions {
            "created_on_column"="created_on"
            "updated_on_column"="updated_on"
            "valid_from_column"="valid_from"
            "valid_to_column"="valid_to"
        }
    }
]
sparkconf {
    "spark.databricks.delta.retentionDurationCheck.enabled"="false"
    "spark.delta.merge.repartitionBeforeWrite"="true"
    "spark.sql.catalog.spark_catalog"="org.apache.spark.sql.delta.catalog.DeltaCatalog"
    "spark.sql.extensions"="io.delta.sql.DeltaSparkSessionExtension"
    "spark.sql.legacy.parquet.datetimeRebaseModeInWrite"=CORRECTED
    "spark.sql.legacy.timeParserPolicy"=CORRECTED
    "spark.sql.mapKeyDedupPolicy"="LAST_WIN"
}
storages=[
    {
        filesystem=S3
        id=normalized
        path="s3a://etl-clin-portal-qa-normalized"
    },
    {
        filesystem=S3
        id=esindex
        path="s3a://etl-clin-portal-qa-esindex"
    },
    {
        filesystem=S3
        id=hpoterms
        path="s3a://etl-clin-portal-qa-hpoterms"
    },
    {
        filesystem=S3
        id=mondoterms
        path="s3a://etl-clin-portal-qa-mondoterms"
    }
]
